name: "Check file with Webhook"
description: "Check file for expected changes and send content to a webhook."
inputs:
  stepfile:
    description: "Step document file to send."
    required: true
  submissionfile:
    description: "Submission file to send."
    required: true
  solutionfile:
    description: "Solution file to send."
    required: true
  webhookurl:
    description: "URL of the webhook."
    required: true
runs:
  using: composite
  steps:
  - shell: bash
    env:
      STEPFILE: ${{ inputs.stepfile }}
      SUBMISSIONFILE: ${{ inputs.submissionfile }}
      SOLUTIONFILE: ${{ inputs.solutionfile }}
      WEBHOOKURL: ${{ inputs.webhookurl }}
    run: |
      echo "Checking that all required env variables are set"

      # Check each file environment variable and if the file is valid
      if [ -z "$STEPFILE" ] || [ ! -f "$STEPFILE" ]; then
        echo "STEPFILE is invalid or does not exist"
        exit 1
      fi
      if [ -z "$SUBMISSIONFILE" ] || [ ! -f "$SUBMISSIONFILE" ]; then
        echo "SUBMISSIONFILE is invalid or does not exist"
        exit 1
      fi
      if [ -z "$SOLUTIONFILE" ] || [ ! -f "$SOLUTIONFILE" ]; then
        echo "SOLUTIONFILE is invalid or does not exist"
        exit 1
      fi
      if [ -z "$WEBHOOKURL" ]; then
        echo "WEBHOOKURL is unset or set to the empty string"
        exit 1
      fi

      echo "Converting file contents to text strings"

      # Read file contents securely
      step_content=$(<"$STEPFILE")
      submission_content=$(<"$SUBMISSIONFILE")
      solution_content=$(<"$SOLUTIONFILE")

      echo "Sending request to $WEBHOOKURL"

      # Send data to webhook and capture response body and status code
      RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "$WEBHOOKURL" \
        -H "Content-Type: application/json" \
        -H "Authorization: Bearer ${{ secrets.API_TOKEN }}" \
        -d "{\"step\": \"$step_content\", \"submission\": \"$submission_content\", \"solution\": \"$solution_content\"}")

      # Extract HTTP status code from response
      HTTP_STATUS=$(echo "$RESPONSE" | tail -n1)
      RESPONSE_BODY=$(echo "$RESPONSE" | sed '$d')

      # Check HTTP response status
      if [ "$HTTP_STATUS" -eq 200 ]; then
          echo "Request successfully sent to webhook"
          echo "Response body: $RESPONSE_BODY"
      else
        echo "Failed to send request to webhook. HTTP status code: $HTTP_STATUS"
        echo "Response body: $RESPONSE_BODY"
        exit 1
      fi
