name: "Check file with Webhook"
description: "Check file for expected changes and send content to a webhook."
inputs:
  step:
    description: "Step document file to send."
    required: true
  submission:
    description: "Submission file to send."
    required: true
  solution:
    description: "Solution file to send."
    required: true
  webhook:
    description: "URL of the webhook."
    required: true
  authtoken:
    description: "Auth token for Twilio authentication."
    required: true
  accountsid:
    description: "Account SID for Twilio authentication."
    required: true
outputs:
  assessment:
    description: "True if the solution is correct"
  reason:
    description: "Reason for assessment"
runs:
  using: composite
  steps:
  - shell: bash
    env:
      STEPFILE: ${{ inputs.step }}
      SUBMISSIONFILE: ${{ inputs.submission }}
      SOLUTIONFILE: ${{ inputs.solution }}
      WEBHOOKURL: ${{ inputs.webhook }}
      AUTH_TOKEN: ${{ inputs.authtoken }}
      ACCOUNT_SID: ${{ inputs.accountsid }}
      GITHUB_USER_EMAIL: ${{ github.actor }}
      OUTPUT_ENV: $GITHUB_ENV
    run: |
      echo "Checking that all required env variables are set"

      # Verify file existence
      if [ ! -f "$STEPFILE" ]; then
        echo "STEPFILE does not exist"
        exit 1
      fi
      if [ ! -f "$SUBMISSIONFILE" ]; then
        echo "SUBMISSIONFILE does not exist"
        exit 1
      fi
      if [ ! -f "$SOLUTIONFILE" ]; then
        echo "SOLUTIONFILE does not exist"
        exit 1
      fi
      if [ -z "$WEBHOOKURL" ]; then
        echo "WEBHOOKURL is unset or empty"
        exit 1
      fi
      if [ -z "$AUTH_TOKEN" ]; then
        echo "AUTH_TOKEN is unset or empty"
        exit 1
      fi
      if [ -z "$ACCOUNT_SID" ]; then
        echo "ACCOUNT_SID is unset or empty"
        exit 1
      fi

      echo "Reading file contents"
      step_content=$(<"$STEPFILE")
      submission_content=$(<"$SUBMISSIONFILE")
      solution_content=$(<"$SOLUTIONFILE")

      echo "Sending request to $WEBHOOKURL"

      RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "$WEBHOOKURL" \
        -H "Content-Type: application/json" \
        -d '{
          "identity": "email:'"${GITHUB_USER_EMAIL}"'",
          "session_id": "mysession",
          "body": {
            "step": "'"${step_content}"'",
            "submission": "'"${submission_content}"'",
            "solution": "'"${solution_content}"'"
          }
        }' \
        -u "$ACCOUNT_SID:$AUTH_TOKEN")

      HTTP_STATUS=$(echo "$RESPONSE" | tail -n1)
      RESPONSE_BODY=$(echo "$RESPONSE" | sed '$d')

      if [ "$HTTP_STATUS" -eq 200 ]; then
        echo "Request successfully sent to webhook"
        echo "Response body: $RESPONSE_BODY"

        ASSESSMENT=$(echo "$RESPONSE_BODY" | jq -r '.assessment')
        REASON=$(echo "$RESPONSE_BODY" | jq -r '.reason')

        # Set outputs for the action
        echo "assessment=$ASSESSMENT" >> $OUTPUT_ENV
        echo "reason=$REASON" >> $OUTPUT_ENV

      else
        echo "Failed to send request to webhook. HTTP status code: $HTTP_STATUS"
        echo "Response body: $RESPONSE_BODY"
        exit 1
      fi
